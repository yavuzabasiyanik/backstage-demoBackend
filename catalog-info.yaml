apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: demo-api
  description: Demo API
spec:
  type: openapi
  owner: team-a
  lifecycle: experimental
  apiConsumedBy: [react-backstage-demo]
  definition: |
    openapi: "3.0.4"
    info:
      title: "My API"
      version: "1.0.0"
    paths:
      "/cards":
        get:
          summary: "Get a list of cards"
          tags:
            - cards
          responses:
            "200":
              description: "A list of cards"
        post:
          summary: "Post card"
          tags:
            - cards
          definition: | 
            Creates a card, takes card holder name and score. 
          requestBody:
            description: The attributes of the new user
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    cardholder:
                      type: string
                      description: The card holder of the card
                    score:
                      type: integer
                      description: The score of the card
          responses:
            '201':
              description: The card was created successfully
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The ID of the newly created card
                      cardholder:
                        type: string
                        description: The cardholder of the newly created card
                      score:
                        type: integer
                        description: The integer of the newly created card
            '400':
              description: The request was invalid
            '409':
              description: The request could not be completed due to a conflict with the current state of the resource
      "/cards/{cardId}":
        delete:
          summary: Delete a card
          tags:
            - cards
          description: Deletes the card with the specified CARD_ID.
          parameters:
            - name: cardId
              in: path
              required: true
              schema:
                type: integer
                minimum: 1
          responses:
            '204':
              description: The card was deleted succesffsully
            '404':
              description: The specified card was not found
  
